{"version":3,"file":"index.js","sources":["../../../../../../../packages/components/measurements/src/distance/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-10-11 09:17:23\n * @LastEditTime: 2022-03-15 14:59:03\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\measurements\\src\\distance\\index.ts\n */\nimport { ComputedRef, defineComponent, Ref } from 'vue'\nimport useDrawingSegment from '@vue-cesium/composables/use-drawing/use-drawing-segment'\nimport { useDrawingActionProps } from '@vue-cesium/composables/use-drawing/props'\nimport type { PropType } from 'vue'\nimport { MeasureUnits } from '@vue-cesium/shared'\nimport type { VcLabelProps, VcPointProps } from '../../../primitive-collections'\nimport type { VcGeometryPolylineProps } from '../../../geometries'\nimport { drawingEmit } from '@vue-cesium/utils/emits'\nimport type { VcPrimitiveGroundPolylineProps, VcPrimitiveProps } from '../../../primitives'\nimport {\n  MeasurementDecimals,\n  VcDrawingDrawEvt,\n  VcDrawingEditorEvt,\n  VcDrawingMouseEvt,\n  VcDrawingPreRenderDatas,\n  VcDrawTipOpts,\n  VcEditorOpts,\n  VcSegmentDrawing\n} from '@vue-cesium/utils/drawing-types'\nimport { VcComponentInternalInstance, VcComponentPublicInstance, VcReadyObject } from '@vue-cesium/utils/types'\n\nexport default defineComponent({\n  name: 'VcMeasurementDistance',\n  props: {\n    ...useDrawingActionProps,\n    showComponentLines: {\n      type: Boolean,\n      default: false\n    },\n    measureUnits: Object as PropType<MeasureUnits>,\n    polylineOpts: Object as PropType<VcGeometryPolylineProps>,\n    primitiveOpts: Object as PropType<VcPrimitiveProps & VcPrimitiveGroundPolylineProps>,\n    labelOpts: Object as PropType<VcLabelProps>,\n    xLabelOpts: Object as PropType<VcLabelProps>,\n    xAngleLabelOpts: Object as PropType<VcLabelProps>,\n    yLabelOpts: Object as PropType<VcLabelProps>,\n    yAngleLabelOpts: Object as PropType<VcLabelProps>,\n    locale: String,\n    decimals: Object as PropType<MeasurementDecimals>,\n    autoUpdateLabelPosition: Boolean\n  },\n  emits: drawingEmit,\n  setup(props, ctx) {\n    // state\n    return useDrawingSegment(props, ctx, 'VcMeasurementDistance')\n  }\n})\n\nexport type VcMeasurementDistanceProps = {\n  /**\n   * Specify whether to respond to mouse pick events.\n   */\n  enableMouseEvent?: boolean\n  /**\n   * Specify Whether the drawing object is visible.\n   */\n  show?: boolean\n  /**\n   * Specify whether the drawing result can be edited.\n   */\n  editable?: boolean\n  /**\n   * Specify drawing hints.\n   */\n  drawtip?: VcDrawTipOpts\n  /**\n   * Specify parameters for drawing points.\n   */\n  pointOpts?: VcPointProps\n  /**\n   * Specify editor options.\n   */\n  editorOpts?: VcEditorOpts\n  /**\n   * Specify editor mode.\n   */\n  mode?: number\n  /**\n   * Specify prerender datas.\n   */\n  preRenderDatas?: VcDrawingPreRenderDatas\n  /**\n   * Specify the unit of measurement\n   */\n  measureUnits?: MeasureUnits\n  /**\n   * Specify parameters for drawing polylines.\n   */\n  polylineOpts?: VcGeometryPolylineProps\n  /**\n   * Specify parameters for drawing primitives.\n   */\n  primitiveOpts?: VcPrimitiveProps & VcPrimitiveGroundPolylineProps\n  /**\n   * Specify parameters for measurement labels.\n   */\n  labelOpts?: VcLabelProps\n  /**\n   * Specify parameters for measurement locale.\n   */\n  locale?: string\n  /**\n   * Specify parameters for measurement decimals.\n   */\n  decimals?: MeasurementDecimals\n  /**\n   * Specify whether the depthTest is disabled.\n   * Default value: false\n   */\n  disableDepthTest?: boolean\n  /**\n   * Specify whether to update label position.\n   * Default value: true\n   */\n  autoUpdateLabelPosition?: boolean\n  xLabelOpts?: VcLabelProps\n  xAngleLabelOpts?: VcLabelProps\n  yLabelOpts?: VcLabelProps\n  yAngleLabelOpts?: VcLabelProps\n  /**\n   * Triggers before the VcMeasurementDistance is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcMeasurementDistance is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the VcMeasurementDistance is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n  /**\n   * \tTriggers when drawing.\n   */\n  onDrawEvt?: (evt: VcDrawingDrawEvt, viewer: Cesium.Viewer) => void\n  /**\n   * Triggers when the editor button is clicked.\n   */\n  onEditorEvt?: (evt: VcDrawingEditorEvt, viewer: Cesium.Viewer) => void\n  /**\n   * Triggers when the mouse is over or out on the drawing point.\n   */\n  onMouseEvt?: (evt: VcDrawingMouseEvt, viewer: Cesium.Viewer) => void\n}\n\nexport interface VcMeasurementDistanceRef extends VcComponentPublicInstance<VcMeasurementDistanceProps> {\n  /**\n   * Get the array of rendering models.\n   */\n  renderDatas?: Ref<VcSegmentDrawing[]>\n  /**\n   * Get the computedRenderDatas.\n   */\n  computedRenderDatas?: ComputedRef<VcSegmentDrawing[]>\n  /**\n   * start a new draw.\n   */\n  startNew: () => void\n  /**\n   * stop drawing.\n   */\n  stop: (removeLatest?: boolean) => void\n  /**\n   * clear and stop drawing.\n   */\n  clear: () => void\n}\n"],"names":["defineComponent","useDrawingActionProps","drawingEmit","useDrawingSegment"],"mappings":";;;;;;;;;AAIA,4BAAeA,mBAAe,CAAC;AAC/B,EAAE,IAAI,EAAE,uBAAuB;AAC/B,EAAE,KAAK,EAAE;AACT,IAAI,GAAGC,2BAAqB;AAC5B,IAAI,kBAAkB,EAAE;AACxB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,KAAK;AACpB,KAAK;AACL,IAAI,YAAY,EAAE,MAAM;AACxB,IAAI,YAAY,EAAE,MAAM;AACxB,IAAI,aAAa,EAAE,MAAM;AACzB,IAAI,SAAS,EAAE,MAAM;AACrB,IAAI,UAAU,EAAE,MAAM;AACtB,IAAI,eAAe,EAAE,MAAM;AAC3B,IAAI,UAAU,EAAE,MAAM;AACtB,IAAI,eAAe,EAAE,MAAM;AAC3B,IAAI,MAAM,EAAE,MAAM;AAClB,IAAI,QAAQ,EAAE,MAAM;AACpB,IAAI,uBAAuB,EAAE,OAAO;AACpC,GAAG;AACH,EAAE,KAAK,EAAEC,iBAAW;AACpB,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE;AACpB,IAAI,OAAOC,4BAAiB,CAAC,KAAK,EAAE,GAAG,EAAE,uBAAuB,CAAC,CAAC;AAClE,GAAG;AACH,CAAC,CAAC;;;;"}
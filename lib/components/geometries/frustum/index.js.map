{"version":3,"file":"index.js","sources":["../../../../../../packages/components/geometries/frustum/index.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-09-16 09:28:13\n * @LastEditTime: 2022-03-30 10:54:26\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\components\\geometries\\frustum\\index.ts\n */\nimport { VcComponentInternalInstance, VcComponentPublicInstance, VcPosition, VcReadyObject } from '@vue-cesium/utils/types'\nimport { defineComponent, getCurrentInstance, createCommentVNode } from 'vue'\nimport { useGeometries } from '@vue-cesium/composables'\nimport { kebabCase } from '@vue-cesium/utils/util'\nimport { frustum, origin, orientation, vertexFormat } from '@vue-cesium/utils/cesium-props'\nimport { commonEmits } from '@vue-cesium/utils/emits'\nexport const frustumGeometryProps = {\n  ...frustum,\n  ...origin,\n  ...orientation,\n  ...vertexFormat\n}\nexport default defineComponent({\n  name: 'VcGeometryFrustum',\n  props: frustumGeometryProps,\n  emits: commonEmits,\n  setup(props, ctx) {\n    // state\n    const instance = getCurrentInstance() as VcComponentInternalInstance\n    instance.cesiumClass = 'FrustumGeometry'\n    useGeometries(props, ctx, instance)\n\n    return () => createCommentVNode(kebabCase(instance.proxy?.$options.name || 'v-if'))\n  }\n})\n\nexport type VcGeometryFrustumProps = {\n  /**\n   * The frustum.\n   */\n  frustum: Cesium.PerspectiveFrustum | Cesium.OrthographicFrustum\n  /**\n   * The origin of the frustum.\n   */\n  origin: VcPosition\n  /**\n   * The orientation of the frustum.\n   */\n  orientation: Cesium.Quaternion\n  /**\n   * The vertex attributes to be computed.\n   */\n  vertexFormat?: Cesium.VertexFormat\n  /**\n   * Triggers before the VcGeometryFrustum is loaded.\n   */\n  onBeforeLoad?: (instance: VcComponentInternalInstance) => void\n  /**\n   * Triggers when the VcGeometryFrustum is successfully loaded.\n   */\n  onReady?: (readyObject: VcReadyObject) => void\n  /**\n   * Triggers when the VcGeometryFrustum is destroyed.\n   */\n  onDestroyed?: (instance: VcComponentInternalInstance) => void\n}\n\nexport type VcGeometryFrustumRef = VcComponentPublicInstance<VcGeometryFrustumProps>\n"],"names":["frustum","origin","orientation","vertexFormat","defineComponent","commonEmits","getCurrentInstance","useGeometries","createCommentVNode","kebabCase"],"mappings":";;;;;;;;;;;AAKY,MAAC,oBAAoB,GAAG;AACpC,EAAE,GAAGA,mBAAO;AACZ,EAAE,GAAGC,kBAAM;AACX,EAAE,GAAGC,uBAAW;AAChB,EAAE,GAAGC,wBAAY;AACjB,EAAE;AACF,sBAAeC,mBAAe,CAAC;AAC/B,EAAE,IAAI,EAAE,mBAAmB;AAC3B,EAAE,KAAK,EAAE,oBAAoB;AAC7B,EAAE,KAAK,EAAEC,iBAAW;AACpB,EAAE,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE;AACpB,IAAI,MAAM,QAAQ,GAAGC,sBAAkB,EAAE,CAAC;AAC1C,IAAI,QAAQ,CAAC,WAAW,GAAG,iBAAiB,CAAC;AAC7C,IAAIC,gBAAa,CAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AACxC,IAAI,OAAO,MAAM;AACjB,MAAM,IAAI,EAAE,CAAC;AACb,MAAM,OAAOC,sBAAkB,CAACC,cAAS,CAAC,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;AAClH,KAAK,CAAC;AACN,GAAG;AACH,CAAC,CAAC;;;;;"}
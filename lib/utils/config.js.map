{"version":3,"file":"config.js","sources":["../../../../packages/utils/config.ts"],"sourcesContent":["/*\n * @Author: zouyaoji@https://github.com/zouyaoji\n * @Date: 2021-10-27 15:54:11\n * @LastEditTime: 2022-02-09 23:47:58\n * @LastEditors: zouyaoji\n * @Description:\n * @FilePath: \\vue-cesium@next\\packages\\utils\\config.ts\n */\nimport type { Language } from '@vue-cesium/locale'\nimport type { InjectionKey, Ref } from 'vue'\nimport type { AnyObject } from './types'\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'\nexport interface ConfigProviderContext {\n  cesiumPath?: string\n  accessToken?: string\n  locale?: Language\n  cfg?: AnyObject // for mars3d\n  __scriptPromise?: Promise<unknown>\n  __viewerUnloadingPromise?: Promise<boolean>\n}\n\nconst vcKey = hasSymbol ? Symbol('VueCesium') : 'VueCesium'\n\nconst fabKey = hasSymbol ? Symbol('_vc_f_') : '_vc_f_'\n\nconst measurementKey = hasSymbol ? Symbol('_vc_measurement_') : '_vc_measurement_'\n\nexport { vcKey, fabKey, measurementKey }\n\nexport const configProviderContextKey: InjectionKey<Ref<ConfigProviderContext>> = Symbol()\n"],"names":[],"mappings":";;;;AAAA,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,CAAC;AACpF,MAAC,KAAK,GAAG,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,YAAY;AACvD,MAAC,MAAM,GAAG,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,SAAS;AAClD,MAAC,cAAc,GAAG,SAAS,GAAG,MAAM,CAAC,kBAAkB,CAAC,GAAG,mBAAmB;AAEvE,MAAC,wBAAwB,GAAG,MAAM;;;;;;;"}